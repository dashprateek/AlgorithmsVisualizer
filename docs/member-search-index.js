memberSearchIndex = [{"p":"com.algo.structure.controlpoints","c":"ControlPoint","l":"active"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel","l":"add(int, List<Double>, Map<Integer, Integer>)","url":"add(int,java.util.List,java.util.Map)"},{"p":"com.algo.structure","c":"Edge","l":"addControlPoint(Vector2D, Vector2D)","url":"addControlPoint(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.structure","c":"Structure","l":"addEdge(E, V, V)","url":"addEdge(E,V,V)"},{"p":"com.algo.structure","c":"Structure","l":"addEdge(E)"},{"p":"com.algo.structure","c":"Structure","l":"addEdge(int, int)","url":"addEdge(int,int)"},{"p":"com.algo.structure","c":"Structure","l":"addEdge(V, V, Configuration)","url":"addEdge(V,V,com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"Structure","l":"addEdge(V, V, int, Configuration)","url":"addEdge(V,V,int,com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"Structure","l":"addEdge(V, V, int)","url":"addEdge(V,V,int)"},{"p":"com.algo.structure","c":"Structure","l":"addEdge(V, V)","url":"addEdge(V,V)"},{"p":"com.algo.structure","c":"Structure","l":"addEdges(Collection<E>)","url":"addEdges(java.util.Collection)"},{"p":"com.algo.structure","c":"Structure","l":"addVertex()"},{"p":"com.algo.structure","c":"Structure","l":"addVertex(Configuration, int)","url":"addVertex(com.algo.config.Configuration,int)"},{"p":"com.algo.structure","c":"Structure","l":"addVertex(Configuration)","url":"addVertex(com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"Structure","l":"addVertex(String, Configuration)","url":"addVertex(java.lang.String,com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"Structure","l":"addVertex(String)","url":"addVertex(java.lang.String)"},{"p":"com.algo.structure","c":"Structure","l":"addVertex(V)"},{"p":"com.algo.structure","c":"Structure","l":"addVertices(Collection<V>)","url":"addVertices(java.util.Collection)"},{"p":"com.algo.structure","c":"Structure","l":"adjacent(V, V)","url":"adjacent(V,V)"},{"p":"com.algo.config","c":"AlgorithmParameters","l":"AlgorithmParameters()","url":"%3Cinit%3E()"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner","l":"AlgorithmsRunner()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Structure","l":"alignHorizontallyFirst(LinkedHashSet<Object>)","url":"alignHorizontallyFirst(java.util.LinkedHashSet)"},{"p":"com.algo.structure","c":"Structure","l":"alignHorizontallyMean(LinkedHashSet<Object>)","url":"alignHorizontallyMean(java.util.LinkedHashSet)"},{"p":"com.algo.structure","c":"Structure","l":"alignVerticallyMean(LinkedHashSet<Object>)","url":"alignVerticallyMean(java.util.LinkedHashSet)"},{"p":"com.algo.export","c":"AllPairShortestPathExport","l":"AllPairShortestPathExport(Structure)","url":"%3Cinit%3E(com.algo.structure.Structure)"},{"p":"com.algo.rendering.shapes","c":"SizeBox","l":"angle"},{"p":"com.algo.structure","c":"Highlights","l":"annotate(Object, String)","url":"annotate(java.lang.Object,java.lang.String)"},{"p":"com.algo.export","c":"GraphTraversalExport","l":"appendChild(boolean[], Collection<Vertex>)","url":"appendChild(boolean[],java.util.Collection)"},{"p":"com.algo.export","c":"AllPairShortestPathExport","l":"appendChild(Integer[][], Integer[][], int)","url":"appendChild(java.lang.Integer[][],java.lang.Integer[][],int)"},{"p":"com.algo.export","c":"CYKAlgorithmsExport","l":"appendChildIteration(Set<String>[][])","url":"appendChildIteration(java.util.Set[][])"},{"p":"com.algo.export","c":"CYKAlgorithmsExport","l":"appendEncodingTrees(String, String)","url":"appendEncodingTrees(java.lang.String,java.lang.String)"},{"p":"com.algo.rendering","c":"Arrow","l":"Arrow(double[], double[], int, double, Arrow.LineFlag)","url":"%3Cinit%3E(double[],double[],int,double,com.algo.rendering.Arrow.LineFlag)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"arrow(Vector2D, Vector2D, Arrow, double, GralogColor, double)","url":"arrow(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D,com.algo.rendering.Arrow,double,com.algo.rendering.GralogColor,double)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"arrow(Vector2D, Vector2D, Arrow, double, GralogColor)","url":"arrow(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D,com.algo.rendering.Arrow,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.structure","c":"Edge","l":"arrowHeadAngle"},{"p":"com.algo.structure","c":"Edge","l":"arrowHeadLength"},{"p":"com.algo.structure","c":"Edge","l":"arrowType"},{"p":"com.algo.rendering","c":"GralogColor","l":"availableColors()"},{"p":"com.algo.rendering","c":"GralogColor","l":"b"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner.AlgorithmsEnum","l":"BACK"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner.ShortestPathEnum","l":"BACK"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner.TraversalEnum","l":"BACK"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner.ShortestPathEnum","l":"BELLMAN_FORD"},{"p":"com.algo.algorithms.graph.shortestpath","c":"BellmanFordAlgorithm","l":"BellmanFordAlgorithm()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Edge.EdgeType","l":"BEZIER"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.Bezier","l":"Bezier()","url":"%3Cinit%3E()"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner.TraversalEnum","l":"BFS"},{"p":"com.algo.algorithms.graph.traversal","c":"BFSTraversal","l":"BFSTraversal()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering","c":"GralogColor","l":"BLACK"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"BLACK"},{"p":"com.algo.rendering","c":"GralogColor","l":"BLUE"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"BLUE"},{"p":"com.algo.parser","c":"DoubleSyntaxChecker","l":"check(String)","url":"check(java.lang.String)"},{"p":"com.algo.parser","c":"IntSyntaxChecker","l":"check(String)","url":"check(java.lang.String)"},{"p":"com.algo.parser","c":"SyntaxChecker","l":"check(String)","url":"check(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"circle(double, double, double, GralogColor)","url":"circle(double,double,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"circle(Vector2D, double, GralogColor)","url":"circle(com.algo.rendering.Vector2D,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.export","c":"ExportFilterManager","l":"clear()"},{"p":"com.algo.plugins","c":"PluginManager","l":"clear()"},{"p":"com.algo.structure","c":"Structure","l":"clear()"},{"p":"com.algo.structure","c":"Highlights","l":"clearAnnotations()"},{"p":"com.algo.structure","c":"Highlights","l":"clearSelection()"},{"p":"com.algo.rendering","c":"Vector2D","l":"closestPointOnLine(double, double, double, double, double, double)","url":"closestPointOnLine(double,double,double,double,double,double)"},{"p":"com.algo.config","c":"Col2Parameters","l":"Col2Parameters()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Edge","l":"collapse(Structure)","url":"collapse(com.algo.structure.Structure)"},{"p":"com.algo.structure","c":"Structure","l":"collapseEdges(Set<Object>)","url":"collapseEdges(java.util.Set)"},{"p":"com.algo.structure","c":"Edge","l":"color"},{"p":"com.algo.config","c":"Configuration","l":"Configuration()","url":"%3Cinit%3E()"},{"p":"com.algo.config","c":"Configuration","l":"Configuration(Configuration)","url":"%3Cinit%3E(com.algo.config.Configuration)"},{"p":"com.algo.config","c":"Configuration","l":"Configuration(Properties)","url":"%3Cinit%3E(java.util.Properties)"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"containsCoordinate(double, double)","url":"containsCoordinate(double,double)"},{"p":"com.algo.structure","c":"Vertex","l":"containsCoordinate(double, double)","url":"containsCoordinate(double,double)"},{"p":"com.algo.structure.controlpoints","c":"ControlPoint","l":"containsCoordinate(double, double)","url":"containsCoordinate(double,double)"},{"p":"com.algo.rendering.shapes","c":"Cycle","l":"containsCoordinate(Vector2D, Vector2D)","url":"containsCoordinate(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"Diamond","l":"containsCoordinate(Vector2D, Vector2D)","url":"containsCoordinate(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"Ellipse","l":"containsCoordinate(Vector2D, Vector2D)","url":"containsCoordinate(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"Rectangle","l":"containsCoordinate(Vector2D, Vector2D)","url":"containsCoordinate(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"containsCoordinate(Vector2D, Vector2D)","url":"containsCoordinate(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.structure","c":"Edge","l":"containsVertex(Vertex)","url":"containsVertex(com.algo.structure.Vertex)"},{"p":"com.algo.structure.controlpoints","c":"ControlPoint","l":"ControlPoint()","url":"%3Cinit%3E()"},{"p":"com.algo.structure.controlpoints","c":"ControlPoint","l":"ControlPoint(Vector2D, Edge)","url":"%3Cinit%3E(com.algo.rendering.Vector2D,com.algo.structure.Edge)"},{"p":"com.algo.structure","c":"Edge","l":"controlPoints"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"coordinates"},{"p":"com.algo.utility","c":"DeepCopy","l":"copy(Object)","url":"copy(java.lang.Object)"},{"p":"com.algo.structure","c":"Vertex","l":"copy(V)"},{"p":"com.algo.rendering","c":"Arrow","l":"count"},{"p":"com.algo.rendering.shapes","c":"Ellipse","l":"create(double, double)","url":"create(double,double)"},{"p":"com.algo.rendering.shapes","c":"Cycle","l":"create(double)"},{"p":"com.algo.structure","c":"DirectedGraph","l":"createEdge(Configuration)","url":"createEdge(com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"UndirectedGraph","l":"createEdge(Configuration)","url":"createEdge(com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"Structure","l":"createEdge(int, Configuration)","url":"createEdge(int,com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"Structure","l":"createEdge(V, V)","url":"createEdge(V,V)"},{"p":"com.algo.structure","c":"DirectedGraph","l":"createVertex()"},{"p":"com.algo.structure","c":"Structure","l":"createVertex()"},{"p":"com.algo.structure","c":"UndirectedGraph","l":"createVertex()"},{"p":"com.algo.structure","c":"DirectedGraph","l":"createVertex(Configuration)","url":"createVertex(com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"Structure","l":"createVertex(Configuration)","url":"createVertex(com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"UndirectedGraph","l":"createVertex(Configuration)","url":"createVertex(com.algo.config.Configuration)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.Bezier","l":"ctrl1"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.Bezier","l":"ctrl2"},{"p":"com.algo.rendering","c":"GralogColor","l":"CYAN"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"CYAN"},{"p":"com.algo.generator","c":"Cycle","l":"Cycle()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering.shapes","c":"Cycle","l":"Cycle(SizeBox)","url":"%3Cinit%3E(com.algo.rendering.shapes.SizeBox)"},{"p":"com.algo.config","c":"CycleParameters","l":"CycleParameters(List<String>)","url":"%3Cinit%3E(java.util.List)"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner.AlgorithmsEnum","l":"CYK"},{"p":"com.algo.algorithms.cfg","c":"CYKAlgorithm","l":"CYKAlgorithm()","url":"%3Cinit%3E()"},{"p":"com.algo.export","c":"CYKAlgorithmsExport","l":"CYKAlgorithmsExport(Grammar)","url":"%3Cinit%3E(com.algo.algorithms.cfg.Grammar)"},{"p":"com.algo.generator","c":"CylindricalGrid","l":"CylindricalGrid()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering","c":"GralogColor","l":"DARK_GREEN"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"DARK_GREEN"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.LineType","l":"DASHED"},{"p":"com.algo.export","c":"IndentedWriter","l":"decreaseIndent()"},{"p":"com.algo.utility","c":"DeepCopy","l":"DeepCopy()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Highlights","l":"deselectAll(Collection<?>)","url":"deselectAll(java.util.Collection)"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner.TraversalEnum","l":"DFS"},{"p":"com.algo.algorithms.graph.traversal","c":"DFSTraversal","l":"DFSTraversal()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering.shapes","c":"Diamond","l":"Diamond(SizeBox)","url":"%3Cinit%3E(com.algo.rendering.shapes.SizeBox)"},{"p":"com.algo.rendering","c":"Vector2D","l":"diamondLength()"},{"p":"com.algo.structure","c":"GraphOperations","l":"differenceLists(ArrayList<T>, ArrayList<T>, ArrayList<T>)","url":"differenceLists(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner.ShortestPathEnum","l":"DIJKSTRA"},{"p":"com.algo.algorithms.graph.shortestpath","c":"DijkstrasAlgorithm","l":"DijkstrasAlgorithm()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering","c":"Vector2D","l":"dimensions()"},{"p":"com.algo.structure","c":"DirectedGraph","l":"DirectedGraph()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Vertex","l":"disconnectEdge(Edge)","url":"disconnectEdge(com.algo.structure.Edge)"},{"p":"com.algo.annotations","c":"DataField","l":"display()"},{"p":"com.algo.structure","c":"Vertex","l":"distanceFromSource"},{"p":"com.algo.rendering","c":"Vector2D","l":"distancePointToLine(double, double, double, double, double, double)","url":"distancePointToLine(double,double,double,double,double,double)"},{"p":"com.algo.rendering","c":"Vector2D","l":"distancePointToLine(double, double, Vector2D, Vector2D)","url":"distancePointToLine(double,double,com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.LineType","l":"DOTTED"},{"p":"com.algo.parser","c":"DoubleSyntaxChecker","l":"DoubleSyntaxChecker()","url":"%3Cinit%3E()"},{"p":"com.algo.parser","c":"DoubleSyntaxChecker","l":"DoubleSyntaxChecker(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"drawBezier(GralogGraphicsContext.Bezier, GralogColor, double, GralogGraphicsContext.LineType)","url":"drawBezier(com.algo.rendering.GralogGraphicsContext.Bezier,com.algo.rendering.GralogColor,double,com.algo.rendering.GralogGraphicsContext.LineType)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"drawQuadratic(GralogGraphicsContext.Bezier, GralogColor, double, GralogGraphicsContext.LineType)","url":"drawQuadratic(com.algo.rendering.GralogGraphicsContext.Bezier,com.algo.rendering.GralogColor,double,com.algo.rendering.GralogGraphicsContext.LineType)"},{"p":"com.algo.utility","c":"StringConverterCollection","l":"EDGE_ID"},{"p":"com.algo.rendering","c":"GralogTikStyles","l":"EDGE_STYLE"},{"p":"com.algo.structure","c":"Edge","l":"Edge()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Edge","l":"Edge(Configuration)","url":"%3Cinit%3E(com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"Structure","l":"edgeIdHoles"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"EdgeIntermediatePoint()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"EdgeIntermediatePoint(Double, Double)","url":"%3Cinit%3E(java.lang.Double,java.lang.Double)"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"EdgeIntermediatePoint(Vector2D)","url":"%3Cinit%3E(com.algo.rendering.Vector2D)"},{"p":"com.algo.structure","c":"Structure","l":"edgesBetweenVertices(V, V)","url":"edgesBetweenVertices(V,V)"},{"p":"com.algo.structure","c":"Edge","l":"edgeSelectionOffset"},{"p":"com.algo.structure","c":"Edge","l":"edgeType"},{"p":"com.algo.rendering.shapes","c":"Ellipse","l":"Ellipse(SizeBox)","url":"%3Cinit%3E(com.algo.rendering.shapes.SizeBox)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.Loop","l":"end"},{"p":"com.algo.rendering","c":"Arrow","l":"endPoint"},{"p":"com.algo.structure","c":"Edge","l":"endPointDistance"},{"p":"com.algo.rendering","c":"GralogColor","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"com.algo.rendering","c":"Vector2D","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"com.algo","c":"MainRunner.MainWindowOptions","l":"EXIT"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner.AlgorithmsEnum","l":"EXIT"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner.ShortestPathEnum","l":"EXIT"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner.TraversalEnum","l":"EXIT"},{"p":"com.algo.config","c":"StringAlgorithmParameter","l":"explanation"},{"p":"com.algo.config","c":"StringAlgorithmParametersList","l":"explanations"},{"p":"com.algo.export","c":"LEDAExport","l":"export(DirectedGraph, OutputStreamWriter, ExportFilterParameters)","url":"export(com.algo.structure.DirectedGraph,java.io.OutputStreamWriter,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.export","c":"GralogTrivialGraphFormatExport","l":"export(Structure, OutputStreamWriter, ExportFilterParameters)","url":"export(com.algo.structure.Structure,java.io.OutputStreamWriter,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.export","c":"TrivialGraphFormatExport","l":"export(Structure, OutputStreamWriter, ExportFilterParameters)","url":"export(com.algo.structure.Structure,java.io.OutputStreamWriter,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.export","c":"TikZExport","l":"export(Structure<Vertex, Edge>, OutputStreamWriter, ExportFilterParameters)","url":"export(com.algo.structure.Structure,java.io.OutputStreamWriter,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.export","c":"ExportFilter","l":"ExportFilter()","url":"%3Cinit%3E()"},{"p":"com.algo.export","c":"ExportFilterParameters","l":"ExportFilterParameters()","url":"%3Cinit%3E()"},{"p":"com.algo.export","c":"ExportFilter","l":"exportGraph(Structure, OutputStreamWriter, ExportFilterParameters)","url":"exportGraph(com.algo.structure.Structure,java.io.OutputStreamWriter,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.export","c":"ExportFilter","l":"exportGraph(Structure, String, ExportFilterParameters)","url":"exportGraph(com.algo.structure.Structure,java.lang.String,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.export","c":"XSLTService","l":"exportStructureToXml(String, Structure<Vertex, Edge>)","url":"exportStructureToXml(java.lang.String,com.algo.structure.Structure)"},{"p":"com.algo.export","c":"GralogTrivialGraphFormatExport","l":"exportToString(Structure)","url":"exportToString(com.algo.structure.Structure)"},{"p":"com.algo.export","c":"TrivialGraphFormatExport","l":"exportToString(Structure)","url":"exportToString(com.algo.structure.Structure)"},{"p":"com.algo.export","c":"ExportFilterDescription","l":"fileExtension()"},{"p":"com.algo.plugins","c":"FileFormatDescription","l":"fileExtension()"},{"p":"com.algo.structure","c":"Vertex","l":"fillColor"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"fillDiamond(double, double, double, double, GralogColor)","url":"fillDiamond(double,double,double,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"fillOval(double, double, double, double, GralogColor)","url":"fillOval(double,double,double,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"fillOval(double, double, double, double)","url":"fillOval(double,double,double,double)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"fillOval(Vector2D, double, double, GralogColor)","url":"fillOval(com.algo.rendering.Vector2D,double,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"fillRectangle(double, double, double, double, GralogColor)","url":"fillRectangle(double,double,double,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.structure","c":"Highlights","l":"filterType(Class<?>)","url":"filterType(java.lang.Class)"},{"p":"com.algo.rendering","c":"Arrow","l":"flag"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner.ShortestPathEnum","l":"FLOYD_WARSHALL"},{"p":"com.algo.algorithms.graph.shortestpath","c":"FloydWarshallAlgorithm","l":"FloydWarshallAlgorithm()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Edge","l":"fromXml(Element, HashMap<String, Vertex>)","url":"fromXml(org.w3c.dom.Element,java.util.HashMap)"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"fromXml(Element)","url":"fromXml(org.w3c.dom.Element)"},{"p":"com.algo.structure","c":"Structure","l":"fromXml(Element)","url":"fromXml(org.w3c.dom.Element)"},{"p":"com.algo.structure","c":"Vertex","l":"fromXml(Element)","url":"fromXml(org.w3c.dom.Element)"},{"p":"com.algo.structure.controlpoints","c":"ControlPoint","l":"fromXml(Element)","url":"fromXml(org.w3c.dom.Element)"},{"p":"com.algo.rendering","c":"GralogColor","l":"g"},{"p":"com.algo.generator","c":"Cycle","l":"generate(AlgorithmParameters)","url":"generate(com.algo.config.AlgorithmParameters)"},{"p":"com.algo.generator","c":"CylindricalGrid","l":"generate(AlgorithmParameters)","url":"generate(com.algo.config.AlgorithmParameters)"},{"p":"com.algo.generator","c":"Generator","l":"generate(AlgorithmParameters)","url":"generate(com.algo.config.AlgorithmParameters)"},{"p":"com.algo.generator","c":"Grid","l":"generate(AlgorithmParameters)","url":"generate(com.algo.config.AlgorithmParameters)"},{"p":"com.algo.generator","c":"Path","l":"generate(AlgorithmParameters)","url":"generate(com.algo.config.AlgorithmParameters)"},{"p":"com.algo.generator","c":"RandomGraph","l":"generate(AlgorithmParameters)","url":"generate(com.algo.config.AlgorithmParameters)"},{"p":"com.algo.generator","c":"Wheel","l":"generate(AlgorithmParameters)","url":"generate(com.algo.config.AlgorithmParameters)"},{"p":"com.algo.algorithms.cfg","c":"CYKAlgorithm","l":"generateEncodingTrees(Grammar, String, String, int, int, Set<String>[][], List<CYKAlgorithm.BTreeNode>)","url":"generateEncodingTrees(com.algo.algorithms.cfg.Grammar,java.lang.String,java.lang.String,int,int,java.util.Set[][],java.util.List)"},{"p":"com.algo.generator","c":"Generator","l":"Generator()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering","c":"Vector2D","l":"get(int)"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"get(int)"},{"p":"com.algo.structure","c":"Vertex","l":"getAdjacentVertices()"},{"p":"com.algo.structure","c":"Highlights","l":"getAnnotation(Object)","url":"getAnnotation(java.lang.Object)"},{"p":"com.algo.parser","c":"ParseError","l":"getBadSuffix()"},{"p":"com.algo.config","c":"Preferences","l":"getBoolean(Class, String, boolean)","url":"getBoolean(java.lang.Class,java.lang.String,boolean)"},{"p":"com.algo.config","c":"Preferences","l":"getBoolean(String, boolean)","url":"getBoolean(java.lang.String,boolean)"},{"p":"com.algo.config","c":"Preferences","l":"getColor(Class, String, GralogColor)","url":"getColor(java.lang.Class,java.lang.String,com.algo.rendering.GralogColor)"},{"p":"com.algo.config","c":"Preferences","l":"getColor(String, GralogColor)","url":"getColor(java.lang.String,com.algo.rendering.GralogColor)"},{"p":"com.algo.structure","c":"Edge","l":"getControlPointCount()"},{"p":"com.algo.structure","c":"Vertex","l":"getCoordinates()"},{"p":"com.algo.structure","c":"Vertex","l":"getDegree()"},{"p":"com.algo.export","c":"ExportFilter","l":"getDescription()"},{"p":"com.algo.generator","c":"Generator","l":"getDescription()"},{"p":"com.algo.structure","c":"Structure","l":"getDescription()"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel.ShortestPathEntry","l":"getDistances()"},{"p":"com.algo.config","c":"Preferences","l":"getDouble(Class, String, double)","url":"getDouble(java.lang.Class,java.lang.String,double)"},{"p":"com.algo.config","c":"Preferences","l":"getDouble(String, double)","url":"getDouble(java.lang.String,double)"},{"p":"com.algo.structure","c":"Structure","l":"getEdgeByEndVertices(Vertex, Vertex)","url":"getEdgeByEndVertices(com.algo.structure.Vertex,com.algo.structure.Vertex)"},{"p":"com.algo.structure","c":"Structure","l":"getEdgeById(int)"},{"p":"com.algo.structure","c":"Structure","l":"getEdgeByVertexIds(int, int)","url":"getEdgeByVertexIds(int,int)"},{"p":"com.algo.structure","c":"Structure","l":"getEdgeByVertexIdsAndId(int, int, int)","url":"getEdgeByVertexIdsAndId(int,int,int)"},{"p":"com.algo.export","c":"ExportFilter","l":"getEdgeNames(Structure, ExportFilterParameters)","url":"getEdgeNames(com.algo.structure.Structure,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.export","c":"GralogTrivialGraphFormatExport","l":"getEdgeNames(Structure, ExportFilterParameters)","url":"getEdgeNames(com.algo.structure.Structure,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.export","c":"TrivialGraphFormatExport","l":"getEdgeNames(Structure, ExportFilterParameters)","url":"getEdgeNames(com.algo.structure.Structure,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.rendering.shapes","c":"Cycle","l":"getEdgePoint(double, Vector2D)","url":"getEdgePoint(double,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"Diamond","l":"getEdgePoint(double, Vector2D)","url":"getEdgePoint(double,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"Ellipse","l":"getEdgePoint(double, Vector2D)","url":"getEdgePoint(double,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"Rectangle","l":"getEdgePoint(double, Vector2D)","url":"getEdgePoint(double,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"getEdgePoint(double, Vector2D)","url":"getEdgePoint(double,com.algo.rendering.Vector2D)"},{"p":"com.algo.structure","c":"Structure","l":"getEdges()"},{"p":"com.algo.structure","c":"Structure","l":"getEdgesT()"},{"p":"com.algo.structure","c":"Edge","l":"getEdgeType()"},{"p":"com.algo.parser","c":"ParseError","l":"getErrorIndex()"},{"p":"com.algo.config","c":"StringAlgorithmParameter","l":"getExplanation()"},{"p":"com.algo.config","c":"StringAlgorithmParametersList","l":"getExplanations()"},{"p":"com.algo.export","c":"ExportFilterManager","l":"getExportFilterDescription(Class<?>, String)","url":"getExportFilterDescription(java.lang.Class,java.lang.String)"},{"p":"com.algo.export","c":"ExportFilterManager","l":"getExportFilters(Class<?>)","url":"getExportFilters(java.lang.Class)"},{"p":"com.algo.config","c":"Preferences","l":"getFile(String, String)","url":"getFile(java.lang.String,java.lang.String)"},{"p":"com.algo.structure","c":"Structure","l":"getFileReference()"},{"p":"com.algo.structure","c":"Highlights","l":"getFilteredByType(Class<?>)","url":"getFilteredByType(java.lang.Class)"},{"p":"com.algo.generator","c":"GeneratorManager","l":"getGeneratorClasses()"},{"p":"com.algo.generator","c":"GeneratorManager","l":"getGeneratorDescription(String)","url":"getGeneratorDescription(java.lang.String)"},{"p":"com.algo.parser","c":"ParseError","l":"getGoodPrefix()"},{"p":"com.algo.structure","c":"StructureUtils","l":"getGraph(String)","url":"getGraph(java.lang.String)"},{"p":"com.algo.structure","c":"StructureUtils","l":"getGraphFromFile(String)","url":"getGraphFromFile(java.lang.String)"},{"p":"com.algo.structure","c":"Edge","l":"getId()"},{"p":"com.algo.structure","c":"Vertex","l":"getId()"},{"p":"com.algo.structure","c":"Vertex","l":"getIncidentEdges()"},{"p":"com.algo.structure","c":"Vertex","l":"getIncomingEdges()"},{"p":"com.algo.structure","c":"Vertex","l":"getIncomingNeighbours()"},{"p":"com.algo.structure","c":"Vertex","l":"getInDegree()"},{"p":"com.algo","c":"Runner","l":"getInput(Scanner, OptionsEnum[])","url":"getInput(java.util.Scanner,com.algo.algorithms.OptionsEnum[])"},{"p":"com.algo.parser","c":"ParseError","l":"getInputString()"},{"p":"com.algo.config","c":"Preferences","l":"getInteger(Class, String, int)","url":"getInteger(java.lang.Class,java.lang.String,int)"},{"p":"com.algo.config","c":"Preferences","l":"getInteger(String, int)","url":"getInteger(java.lang.String,int)"},{"p":"com.algo.rendering.shapes","c":"Cycle","l":"getIntersection(Vector2D, Vector2D, Vector2D)","url":"getIntersection(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"Diamond","l":"getIntersection(Vector2D, Vector2D, Vector2D)","url":"getIntersection(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"Ellipse","l":"getIntersection(Vector2D, Vector2D, Vector2D)","url":"getIntersection(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"Rectangle","l":"getIntersection(Vector2D, Vector2D, Vector2D)","url":"getIntersection(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"getIntersection(Vector2D, Vector2D, Vector2D)","url":"getIntersection(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.config","c":"StringAlgorithmParameter","l":"getLabel()"},{"p":"com.algo.config","c":"StringAlgorithmParametersList","l":"getLabels()"},{"p":"com.algo.structure","c":"Vertex","l":"getNeighbours()"},{"p":"com.algo.structure","c":"Edge","l":"getOffset()"},{"p":"com.algo","c":"MainRunner.MainWindowOptions","l":"getOrdinal()"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner.AlgorithmsEnum","l":"getOrdinal()"},{"p":"com.algo.algorithms","c":"OptionsEnum","l":"getOrdinal()"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner.ShortestPathEnum","l":"getOrdinal()"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner.TraversalEnum","l":"getOrdinal()"},{"p":"com.algo.structure","c":"Vertex","l":"getOutDegree()"},{"p":"com.algo.structure","c":"Vertex","l":"getOutgoingEdges()"},{"p":"com.algo.structure","c":"Vertex","l":"getOutgoingNeighbours()"},{"p":"com.algo.generator","c":"Cycle","l":"getParameters()"},{"p":"com.algo.generator","c":"CylindricalGrid","l":"getParameters()"},{"p":"com.algo.generator","c":"Generator","l":"getParameters()"},{"p":"com.algo.generator","c":"Grid","l":"getParameters()"},{"p":"com.algo.generator","c":"Path","l":"getParameters()"},{"p":"com.algo.generator","c":"RandomGraph","l":"getParameters()"},{"p":"com.algo.generator","c":"Wheel","l":"getParameters()"},{"p":"com.algo.export","c":"ExportFilter","l":"getParameters(Structure)","url":"getParameters(com.algo.structure.Structure)"},{"p":"com.algo.structure.controlpoints","c":"ControlPoint","l":"getPosition()"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel.ShortestPathEntry","l":"getPredecessor()"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"getProductionRules()"},{"p":"com.algo.config","c":"Preferences","l":"getProperties()"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel.ShortestPathEntry","l":"getQueuedElement()"},{"p":"com.algo.structure","c":"Vertex","l":"getRadius()"},{"p":"com.algo.structure","c":"Structure","l":"getRandomEdge()"},{"p":"com.algo.structure","c":"StructureUtils","l":"getRandomGraph(boolean, boolean)","url":"getRandomGraph(boolean,boolean)"},{"p":"com.algo.structure","c":"Structure","l":"getRandomVertex()"},{"p":"com.algo.structure","c":"Highlights","l":"getSelection()"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel","l":"getShortestPaths()"},{"p":"com.algo.structure","c":"Edge","l":"getSource()"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"getStart()"},{"p":"com.algo.structure","c":"Edge","l":"getStartingPointSource()"},{"p":"com.algo.structure","c":"Edge","l":"getStartingPointTarget()"},{"p":"com.algo.config","c":"Preferences","l":"getString(Class, String, String)","url":"getString(java.lang.Class,java.lang.String,java.lang.String)"},{"p":"com.algo.config","c":"Preferences","l":"getString(String, String)","url":"getString(java.lang.String,java.lang.String)"},{"p":"com.algo.structure","c":"StructureManager","l":"getStructureClasses()"},{"p":"com.algo.structure","c":"StructureManager","l":"getStructureDescription(String)","url":"getStructureDescription(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogTikStyles","l":"getStyle()"},{"p":"com.algo.structure","c":"Edge","l":"getTarget()"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"getTerminals()"},{"p":"com.algo","c":"MainRunner.MainWindowOptions","l":"getText()"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner.AlgorithmsEnum","l":"getText()"},{"p":"com.algo.algorithms","c":"OptionsEnum","l":"getText()"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner.ShortestPathEnum","l":"getText()"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner.TraversalEnum","l":"getText()"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"getValue()"},{"p":"com.algo.rendering","c":"GralogColor","l":"getValue(GralogColor.Color)","url":"getValue(com.algo.rendering.GralogColor.Color)"},{"p":"com.algo.config","c":"Configuration","l":"getValue(String, Function<String, T>, T)","url":"getValue(java.lang.String,java.util.function.Function,T)"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"getVariables()"},{"p":"com.algo.rendering","c":"Vector2D","l":"getVectorAtAngle(double, double)","url":"getVectorAtAngle(double,double)"},{"p":"com.algo.structure","c":"Structure","l":"getVertexById(int)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel","l":"getVertexList()"},{"p":"com.algo.export","c":"ExportFilter","l":"getVertexNames(Structure, ExportFilterParameters)","url":"getVertexNames(com.algo.structure.Structure,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.export","c":"GralogTrivialGraphFormatExport","l":"getVertexNames(Structure, ExportFilterParameters)","url":"getVertexNames(com.algo.structure.Structure,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.export","c":"TrivialGraphFormatExport","l":"getVertexNames(Structure, ExportFilterParameters)","url":"getVertexNames(com.algo.structure.Structure,com.algo.export.ExportFilterParameters)"},{"p":"com.algo.structure","c":"Structure","l":"getVertices()"},{"p":"com.algo.structure","c":"Structure","l":"getVerticesT()"},{"p":"com.algo.rendering","c":"Vector2D","l":"getX()"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"getX()"},{"p":"com.algo.rendering","c":"Vector2D","l":"getY()"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"getY()"},{"p":"com.algo.rendering","c":"GralogColor","l":"GralogColor(GralogColor.Color)","url":"%3Cinit%3E(com.algo.rendering.GralogColor.Color)"},{"p":"com.algo.rendering","c":"GralogColor","l":"GralogColor(GralogColor)","url":"%3Cinit%3E(com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogColor","l":"GralogColor(int, int, int)","url":"%3Cinit%3E(int,int,int)"},{"p":"com.algo.rendering","c":"GralogColor","l":"GralogColor(int)","url":"%3Cinit%3E(int)"},{"p":"com.algo.rendering","c":"GralogColor","l":"GralogColor(short, short, short)","url":"%3Cinit%3E(short,short,short)"},{"p":"com.algo.rendering","c":"GralogColor","l":"GralogColor(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"GralogGraphicsContext()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Edge","l":"gralogPipify()"},{"p":"com.algo.structure","c":"Vertex","l":"gralogPipify()"},{"p":"com.algo.export","c":"GralogTrivialGraphFormatExport","l":"GralogTrivialGraphFormatExport()","url":"%3Cinit%3E()"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"Grammar()","url":"%3Cinit%3E()"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"Grammar(String, Set<String>, Set<String>, Map<String, Set<String>>)","url":"%3Cinit%3E(java.lang.String,java.util.Set,java.util.Set,java.util.Map)"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"Grammar(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner.AlgorithmsEnum","l":"GRAPH_ALGORITHMS"},{"p":"com.algo.algorithms.graph","c":"GraphAlgorithmsRunner","l":"GraphAlgorithmsRunner()","url":"%3Cinit%3E()"},{"p":"com.algo.export","c":"GraphTraversalExport","l":"GraphTraversalExport(String, Structure)","url":"%3Cinit%3E(java.lang.String,com.algo.structure.Structure)"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner","l":"GraphTraversalRunner()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering","c":"GralogColor","l":"GRAY"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"GRAY"},{"p":"com.algo.rendering","c":"GralogColor","l":"GREEN"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"GREEN"},{"p":"com.algo.generator","c":"Grid","l":"Grid()","url":"%3Cinit%3E()"},{"p":"com.algo.config","c":"GridParameters","l":"GridParameters(List<String>)","url":"%3Cinit%3E(java.util.List)"},{"p":"com.algo.structure","c":"Structure","l":"hasFileReference()"},{"p":"com.algo.rendering","c":"GralogColor","l":"hashCode()"},{"p":"com.algo.rendering","c":"Vector2D","l":"hashCode()"},{"p":"com.algo.structure","c":"VertexToInteger","l":"hasRemovedVertices"},{"p":"com.algo.rendering.shapes","c":"SizeBox","l":"height"},{"p":"com.algo.structure","c":"Highlights","l":"Highlights()","url":"%3Cinit%3E()"},{"p":"com.algo.parser","c":"SyntaxChecker.Result","l":"hint"},{"p":"com.algo.structure","c":"Vertex","l":"id"},{"p":"com.algo.config","c":"ImplicitParameters","l":"ImplicitParameters()","url":"%3Cinit%3E()"},{"p":"com.algo.export","c":"IndentedWriter","l":"increaseIndent()"},{"p":"com.algo.structure","c":"Structure","l":"incToString()"},{"p":"com.algo.export","c":"IndentedWriter","l":"IndentedWriter(Writer, int)","url":"%3Cinit%3E(java.io.Writer,int)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"BellmanFordAlgorithm","l":"INF"},{"p":"com.algo.algorithms.graph.shortestpath","c":"FloydWarshallAlgorithm","l":"INF"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel","l":"INF"},{"p":"com.algo.plugins","c":"PluginManager","l":"initialize()"},{"p":"com.algo.plugins","c":"PluginManager","l":"instantiateClass(String)","url":"instantiateClass(java.lang.String)"},{"p":"com.algo.export","c":"ExportFilterManager","l":"instantiateExportFilter(Class<?>, String)","url":"instantiateExportFilter(java.lang.Class,java.lang.String)"},{"p":"com.algo.export","c":"ExportFilterManager","l":"instantiateExportFilterByExtension(Class<?>, String)","url":"instantiateExportFilterByExtension(java.lang.Class,java.lang.String)"},{"p":"com.algo.generator","c":"GeneratorManager","l":"instantiateGenerator(String)","url":"instantiateGenerator(java.lang.String)"},{"p":"com.algo.structure","c":"StructureManager","l":"instantiateStructure(String)","url":"instantiateStructure(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogColor","l":"IntegerToColor()"},{"p":"com.algo.structure","c":"Edge","l":"intermediatePoints"},{"p":"com.algo.structure","c":"Vertex","l":"intersection(Vector2D, Vector2D)","url":"intersection(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D)"},{"p":"com.algo.structure","c":"Vertex","l":"intersectionAdjusted(Vector2D, Vector2D, double)","url":"intersectionAdjusted(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D,double)"},{"p":"com.algo.structure","c":"GraphOperations","l":"intersectionLists(ArrayList<T>, ArrayList<T>, ArrayList<T>)","url":"intersectionLists(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)"},{"p":"com.algo.parser","c":"IntSyntaxChecker","l":"IntSyntaxChecker()","url":"%3Cinit%3E()"},{"p":"com.algo.parser","c":"IntSyntaxChecker","l":"IntSyntaxChecker(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"com.algo.rendering","c":"GralogColor","l":"inverse()"},{"p":"com.algo.rendering","c":"GralogColor","l":"isColor(String)","url":"isColor(java.lang.String)"},{"p":"com.algo.structure","c":"Edge","l":"isDirected"},{"p":"com.algo.structure","c":"Edge","l":"isDirected()"},{"p":"com.algo.structure","c":"Edge","l":"isEdgeType(String)","url":"isEdgeType(java.lang.String)"},{"p":"com.algo.structure","c":"Structure","l":"isEmpty()"},{"p":"com.algo.structure","c":"Edge","l":"isLoop()"},{"p":"com.algo.structure","c":"Highlights","l":"isSelected(Object)","url":"isSelected(java.lang.Object)"},{"p":"com.algo.structure","c":"Highlights","l":"isSelectionEmpty()"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"isShape(String)","url":"isShape(java.lang.String)"},{"p":"com.algo.structure","c":"Edge","l":"isSiblingTo(Edge)","url":"isSiblingTo(com.algo.structure.Edge)"},{"p":"com.algo.config","c":"StringAlgorithmParameter","l":"label"},{"p":"com.algo.structure","c":"Edge","l":"label"},{"p":"com.algo.structure","c":"Vertex","l":"label"},{"p":"com.algo.config","c":"StringAlgorithmParametersList","l":"labels"},{"p":"com.algo.structure","c":"Highlights","l":"lastAdded()"},{"p":"com.algo.export","c":"LEDAExport","l":"LEDAExport()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering","c":"Vector2D","l":"length()"},{"p":"com.algo.structure","c":"Edge","l":"length()"},{"p":"com.algo.rendering","c":"Arrow.LineFlag","l":"LINE"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"line(double, double, double, double, GralogColor, double, GralogGraphicsContext.LineType)","url":"line(double,double,double,double,com.algo.rendering.GralogColor,double,com.algo.rendering.GralogGraphicsContext.LineType)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"line(Vector2D, Vector2D, GralogColor, double, GralogGraphicsContext.LineType)","url":"line(com.algo.rendering.Vector2D,com.algo.rendering.Vector2D,com.algo.rendering.GralogColor,double,com.algo.rendering.GralogGraphicsContext.LineType)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"lines(double[], double[], int, GralogColor, double)","url":"lines(double[],double[],int,com.algo.rendering.GralogColor,double)"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"loadFromFile(String)","url":"loadFromFile(java.lang.String)"},{"p":"com.algo.structure","c":"Structure","l":"loadFromFile(String)","url":"loadFromFile(java.lang.String)"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"loadFromStream(InputStream)","url":"loadFromStream(java.io.InputStream)"},{"p":"com.algo.structure","c":"Structure","l":"loadFromStream(InputStream)","url":"loadFromStream(java.io.InputStream)"},{"p":"com.algo.plugins","c":"PluginManager","l":"loadPlugin(String)","url":"loadPlugin(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.Loop","l":"Loop()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"loop(GralogGraphicsContext.Loop, double, double, GralogColor, double, GralogGraphicsContext.LineType)","url":"loop(com.algo.rendering.GralogGraphicsContext.Loop,double,double,com.algo.rendering.GralogColor,double,com.algo.rendering.GralogGraphicsContext.LineType)"},{"p":"com.algo.structure","c":"Vertex","l":"loopAnchor"},{"p":"com.algo.structure","c":"Vertex","l":"loopAngle"},{"p":"com.algo.rendering","c":"GralogColor","l":"MAGENTA"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"MAGENTA"},{"p":"com.algo","c":"Main","l":"Main()","url":"%3Cinit%3E()"},{"p":"com.algo","c":"Main","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.algo","c":"MainRunner","l":"MainRunner()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering","c":"GralogColor","l":"MAROON"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"MAROON"},{"p":"com.algo.structure","c":"Edge","l":"maximumCoordinate(int)"},{"p":"com.algo.structure","c":"Structure","l":"maximumCoordinate(int)"},{"p":"com.algo.structure","c":"Vertex","l":"maximumCoordinate(int)"},{"p":"com.algo.rendering","c":"Vector2D","l":"measureAngleX()"},{"p":"com.algo.structure","c":"Structure","l":"mergeStructure(Structure<V, E>, V, V)","url":"mergeStructure(com.algo.structure.Structure,V,V)"},{"p":"com.algo.rendering","c":"Vector2D","l":"minus(double, double)","url":"minus(double,double)"},{"p":"com.algo.rendering","c":"Vector2D","l":"minus(Vector2D)","url":"minus(com.algo.rendering.Vector2D)"},{"p":"com.algo.structure","c":"Edge","l":"multiEdgeOffset"},{"p":"com.algo.rendering","c":"Vector2D","l":"multiply(double)"},{"p":"com.algo.rendering","c":"Vector2D","l":"multiply(Vector2D)","url":"multiply(com.algo.rendering.Vector2D)"},{"p":"com.algo.annotations","c":"AlgorithmDescription","l":"name()"},{"p":"com.algo.annotations","c":"StructureDescription","l":"name()"},{"p":"com.algo.export","c":"ExportFilterDescription","l":"name()"},{"p":"com.algo.generator","c":"GeneratorDescription","l":"name()"},{"p":"com.algo.plugins","c":"Description","l":"name()"},{"p":"com.algo.plugins","c":"FileFormatDescription","l":"name()"},{"p":"com.algo.plugins","c":"XmlName","l":"name()"},{"p":"com.algo.rendering","c":"GralogColor","l":"name()"},{"p":"com.algo.rendering","c":"GralogColor","l":"NAVY"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"NAVY"},{"p":"com.algo.algorithms","c":"OptionsEnum.Options","l":"NO"},{"p":"com.algo.rendering","c":"GralogTikStyles","l":"NODE_STYLE"},{"p":"com.algo.rendering","c":"Vector2D","l":"normalized()"},{"p":"com.algo.rendering","c":"GralogColor","l":"numberNamedColors()"},{"p":"com.algo.config","c":"Col2Parameters","l":"nVertices"},{"p":"com.algo.rendering","c":"GralogColor","l":"OLIVE"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"OLIVE"},{"p":"com.algo.rendering","c":"Vector2D","l":"one()"},{"p":"com.algo.rendering","c":"GralogColor","l":"ORANGE"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"ORANGE"},{"p":"com.algo.rendering","c":"Vector2D","l":"orthogonal()"},{"p":"com.algo.rendering","c":"Vector2D","l":"orthogonal(int)"},{"p":"com.algo.config","c":"StringAlgorithmParameter","l":"parameter"},{"p":"com.algo.export","c":"StringExportParameter","l":"parameter"},{"p":"com.algo.config","c":"StringAlgorithmParametersList","l":"parameters"},{"p":"com.algo.structure.controlpoints","c":"ControlPoint","l":"parent"},{"p":"com.algo.rendering","c":"GralogColor","l":"parseColor(String)","url":"parseColor(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogColor","l":"parseColorAlpha(String)","url":"parseColorAlpha(java.lang.String)"},{"p":"com.algo.parser","c":"ParseError","l":"ParseError(String, String, int)","url":"%3Cinit%3E(java.lang.String,java.lang.String,int)"},{"p":"com.algo","c":"Runner","l":"parseInput(Scanner, OptionsEnum[])","url":"parseInput(java.util.Scanner,com.algo.algorithms.OptionsEnum[])"},{"p":"com.algo.generator","c":"Path","l":"Path()","url":"%3Cinit%3E()"},{"p":"com.algo.config","c":"PathParameters","l":"PathParameters(List<String>)","url":"%3Cinit%3E(java.util.List)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.LineType","l":"PLAIN"},{"p":"com.algo.rendering","c":"Vector2D","l":"plus(double, double)","url":"plus(double,double)"},{"p":"com.algo.rendering","c":"Vector2D","l":"plus(Vector2D)","url":"plus(com.algo.rendering.Vector2D)"},{"p":"com.algo.structure","c":"Structure","l":"pollNextFreeEdgeID()"},{"p":"com.algo.structure","c":"Structure","l":"pollNextFreeVertexID()"},{"p":"com.algo.rendering","c":"Arrow.LineFlag","l":"POLY"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"polygon(double[], double[], int, GralogColor)","url":"polygon(double[],double[],int,com.algo.rendering.GralogColor)"},{"p":"com.algo.structure.controlpoints","c":"ControlPoint","l":"position"},{"p":"com.algo.algorithms.cfg","c":"CYKAlgorithm","l":"preOrderTraversal(CYKAlgorithm.BTreeNode, StringBuilder, Grammar)","url":"preOrderTraversal(com.algo.algorithms.cfg.CYKAlgorithm.BTreeNode,java.lang.StringBuilder,com.algo.algorithms.cfg.Grammar)"},{"p":"com.algo.structure","c":"Vertex","l":"printLabel"},{"p":"com.algo.config","c":"Preferences","l":"printProps()"},{"p":"com.algo.config","c":"Col2Parameters","l":"prob"},{"p":"com.algo","c":"MainRunner.MainWindowOptions","l":"PROCESS_XSLT"},{"p":"com.algo.rendering","c":"GralogColor","l":"PUCE"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"PUCE"},{"p":"com.algo.rendering","c":"GralogColor","l":"PURPLE"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"PURPLE"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"putText(double, double, String, double, GralogColor)","url":"putText(double,double,java.lang.String,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"putText(Vector2D, String, double, GralogColor)","url":"putText(com.algo.rendering.Vector2D,java.lang.String,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogColor","l":"r"},{"p":"com.algo.structure","c":"Vertex","l":"radius"},{"p":"com.algo.generator","c":"RandomGraph","l":"RandomGraph()","url":"%3Cinit%3E()"},{"p":"com.algo.config","c":"RandomGraphParameters","l":"RandomGraphParameters(List<String>)","url":"%3Cinit%3E(java.util.List)"},{"p":"com.algo.annotations","c":"DataField","l":"readOnly()"},{"p":"com.algo.rendering.shapes","c":"Rectangle","l":"Rectangle(SizeBox)","url":"%3Cinit%3E(com.algo.rendering.shapes.SizeBox)"},{"p":"com.algo.rendering","c":"GralogColor","l":"RED"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"RED"},{"p":"com.algo.plugins","c":"PluginManager","l":"registerClass(Class<?>)","url":"registerClass(java.lang.Class)"},{"p":"com.algo.plugins","c":"PluginManager","l":"registerClass(String, String, Class<?>)","url":"registerClass(java.lang.String,java.lang.String,java.lang.Class)"},{"p":"com.algo.export","c":"ExportFilterManager","l":"registerExportFilterClass(Class<?>, String)","url":"registerExportFilterClass(java.lang.Class,java.lang.String)"},{"p":"com.algo.generator","c":"GeneratorManager","l":"registerGeneratorClass(Class<?>, String)","url":"registerGeneratorClass(java.lang.Class,java.lang.String)"},{"p":"com.algo.structure","c":"StructureManager","l":"registerStructureClass(Class<?>, String)","url":"registerStructureClass(java.lang.Class,java.lang.String)"},{"p":"com.algo.structure","c":"Highlights","l":"remove(Object)","url":"remove(java.lang.Object)"},{"p":"com.algo.structure","c":"Highlights","l":"removeAll(List)","url":"removeAll(java.util.List)"},{"p":"com.algo.structure","c":"Edge","l":"removeControlPoint(ControlPoint)","url":"removeControlPoint(com.algo.structure.controlpoints.ControlPoint)"},{"p":"com.algo.structure","c":"Structure","l":"removeEdge(Edge, boolean)","url":"removeEdge(com.algo.structure.Edge,boolean)"},{"p":"com.algo.structure","c":"Structure","l":"removeEdge(Edge)","url":"removeEdge(com.algo.structure.Edge)"},{"p":"com.algo.structure","c":"Structure","l":"removeEdge(int)"},{"p":"com.algo.structure","c":"Structure","l":"removeVertex(Vertex)","url":"removeVertex(com.algo.structure.Vertex)"},{"p":"com.algo.structure","c":"Structure","l":"removeVertexByID(int)"},{"p":"com.algo.structure","c":"Structure","l":"removeVertices(Collection<V>)","url":"removeVertices(java.util.Collection)"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"render(GralogGraphicsContext, Vector2D, GralogColor, GralogColor)","url":"render(com.algo.rendering.GralogGraphicsContext,com.algo.rendering.Vector2D,com.algo.rendering.GralogColor,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering.shapes","c":"Cycle","l":"render(GralogGraphicsContext, Vector2D, String, GralogColor, GralogColor)","url":"render(com.algo.rendering.GralogGraphicsContext,com.algo.rendering.Vector2D,java.lang.String,com.algo.rendering.GralogColor,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering.shapes","c":"Diamond","l":"render(GralogGraphicsContext, Vector2D, String, GralogColor, GralogColor)","url":"render(com.algo.rendering.GralogGraphicsContext,com.algo.rendering.Vector2D,java.lang.String,com.algo.rendering.GralogColor,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering.shapes","c":"Ellipse","l":"render(GralogGraphicsContext, Vector2D, String, GralogColor, GralogColor)","url":"render(com.algo.rendering.GralogGraphicsContext,com.algo.rendering.Vector2D,java.lang.String,com.algo.rendering.GralogColor,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering.shapes","c":"Rectangle","l":"render(GralogGraphicsContext, Vector2D, String, GralogColor, GralogColor)","url":"render(com.algo.rendering.GralogGraphicsContext,com.algo.rendering.Vector2D,java.lang.String,com.algo.rendering.GralogColor,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"render(GralogGraphicsContext, Vector2D, String, GralogColor, GralogColor)","url":"render(com.algo.rendering.GralogGraphicsContext,com.algo.rendering.Vector2D,java.lang.String,com.algo.rendering.GralogColor,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"RenderingShape(SizeBox)","url":"%3Cinit%3E(com.algo.rendering.shapes.SizeBox)"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"renderingShapeClasses"},{"p":"com.algo.parser","c":"SyntaxChecker.Result","l":"Result()","url":"%3Cinit%3E()"},{"p":"com.algo.export","c":"XSLTService","l":"ROOT_PATH"},{"p":"com.algo.rendering","c":"Vector2D","l":"rotate(double)"},{"p":"com.algo.rendering","c":"Vector2D","l":"rotate(Vector2D, double)","url":"rotate(com.algo.rendering.Vector2D,double)"},{"p":"com.algo.algorithms.cfg","c":"CYKAlgorithm","l":"run(Grammar, String, String)","url":"run(com.algo.algorithms.cfg.Grammar,java.lang.String,java.lang.String)"},{"p":"com.algo","c":"MainRunner","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo","c":"Runner","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms.cfg","c":"CYKAlgorithm","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms.graph","c":"GraphAlgorithmsRunner","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"BellmanFordAlgorithm","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"DijkstrasAlgorithm","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"FloydWarshallAlgorithm","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms.graph.traversal","c":"BFSTraversal","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms.graph.traversal","c":"DFSTraversal","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner","l":"run(Scanner)","url":"run(java.util.Scanner)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"DijkstrasAlgorithm","l":"run(Structure, Vertex, String)","url":"run(com.algo.structure.Structure,com.algo.structure.Vertex,java.lang.String)"},{"p":"com.algo.algorithms.graph.traversal","c":"BFSTraversal","l":"run(Structure, Vertex, String)","url":"run(com.algo.structure.Structure,com.algo.structure.Vertex,java.lang.String)"},{"p":"com.algo.algorithms.graph.traversal","c":"DFSTraversal","l":"run(Structure, Vertex, String)","url":"run(com.algo.structure.Structure,com.algo.structure.Vertex,java.lang.String)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"FloydWarshallAlgorithm","l":"run(Structure<Vertex, Edge>, String)","url":"run(com.algo.structure.Structure,java.lang.String)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"BellmanFordAlgorithm","l":"run(Structure<Vertex, Edge>, Vertex, String)","url":"run(com.algo.structure.Structure,com.algo.structure.Vertex,java.lang.String)"},{"p":"com.algo","c":"Runner","l":"Runner()","url":"%3Cinit%3E()"},{"p":"com.algo.export","c":"XSLTService","l":"runXSLTTransform(String, String, String)","url":"runXSLTTransform(java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.algo.export","c":"XSLTService","l":"runXSLTTransformGraphIterations(String, String)","url":"runXSLTTransformGraphIterations(java.lang.String,java.lang.String)"},{"p":"com.algo.export","c":"XSLTService","l":"runXSLTTransformTable(String, String)","url":"runXSLTTransformTable(java.lang.String,java.lang.String)"},{"p":"com.algo.structure","c":"Edge","l":"sameOrientationAs(Edge)","url":"sameOrientationAs(com.algo.structure.Edge)"},{"p":"com.algo","c":"MainRunner.MainWindowOptions","l":"SELECT_ALGORITHMS"},{"p":"com.algo.structure","c":"Highlights","l":"select(Object)","url":"select(java.lang.Object)"},{"p":"com.algo.structure","c":"Highlights","l":"selectAll(Collection<?>)","url":"selectAll(java.util.Collection)"},{"p":"com.algo.rendering","c":"GralogTikStyles","l":"SELECTED_EDGE_STYLE"},{"p":"com.algo.rendering","c":"GralogTikStyles","l":"SELECTED_NODE_STYLE"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"selectionRectangle(Point2D, Point2D, Color)","url":"selectionRectangle(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.Color)"},{"p":"com.algo.config","c":"Preferences","l":"setBoolean(Class, String, boolean)","url":"setBoolean(java.lang.Class,java.lang.String,boolean)"},{"p":"com.algo.config","c":"Preferences","l":"setBoolean(String, boolean)","url":"setBoolean(java.lang.String,boolean)"},{"p":"com.algo.config","c":"Preferences","l":"setColor(Class, String, GralogColor)","url":"setColor(java.lang.Class,java.lang.String,com.algo.rendering.GralogColor)"},{"p":"com.algo.config","c":"Preferences","l":"setColor(String, GralogColor)","url":"setColor(java.lang.String,com.algo.rendering.GralogColor)"},{"p":"com.algo.structure","c":"Vertex","l":"setCoordinates(double, double)","url":"setCoordinates(double,double)"},{"p":"com.algo.structure","c":"Vertex","l":"setCoordinates(Vector2D)","url":"setCoordinates(com.algo.rendering.Vector2D)"},{"p":"com.algo.structure","c":"Edge","l":"setDirectedness(boolean)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel.ShortestPathEntry","l":"setDistances(List<Double>)","url":"setDistances(java.util.List)"},{"p":"com.algo.config","c":"Preferences","l":"setDouble(Class, String, double)","url":"setDouble(java.lang.Class,java.lang.String,double)"},{"p":"com.algo.config","c":"Preferences","l":"setDouble(String, double)","url":"setDouble(java.lang.String,double)"},{"p":"com.algo.structure","c":"Structure","l":"setEdgesT(HashMap<Integer, E>)","url":"setEdgesT(java.util.HashMap)"},{"p":"com.algo.structure","c":"Edge","l":"setEdgeType(Edge.EdgeType)","url":"setEdgeType(com.algo.structure.Edge.EdgeType)"},{"p":"com.algo.structure","c":"Edge","l":"setEdgeType(String)","url":"setEdgeType(java.lang.String)"},{"p":"com.algo.config","c":"Preferences","l":"setFile(String, File)","url":"setFile(java.lang.String,java.io.File)"},{"p":"com.algo.structure","c":"Structure","l":"setFileReference(boolean, String)","url":"setFileReference(boolean,java.lang.String)"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"setHeight(double)"},{"p":"com.algo.structure","c":"Edge","l":"setId(int)"},{"p":"com.algo.structure","c":"Vertex","l":"setId(int)"},{"p":"com.algo.config","c":"Preferences","l":"setInteger(Class, String, int)","url":"setInteger(java.lang.Class,java.lang.String,int)"},{"p":"com.algo.config","c":"Preferences","l":"setInteger(String, int)","url":"setInteger(java.lang.String,int)"},{"p":"com.algo.structure","c":"Edge","l":"setLabel(String)","url":"setLabel(java.lang.String)"},{"p":"com.algo.structure","c":"Vertex","l":"setLabel(String)","url":"setLabel(java.lang.String)"},{"p":"com.algo.structure.controlpoints","c":"ControlPoint","l":"setPosition(Vector2D)","url":"setPosition(com.algo.rendering.Vector2D)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel.ShortestPathEntry","l":"setPredecessor(Map<Integer, Integer>)","url":"setPredecessor(java.util.Map)"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"setProductionRules(Map<String, Set<String>>)","url":"setProductionRules(java.util.Map)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel.ShortestPathEntry","l":"setQueuedElement(Integer)","url":"setQueuedElement(java.lang.Integer)"},{"p":"com.algo.rendering.shapes","c":"Cycle","l":"setRadius(double)"},{"p":"com.algo.structure","c":"Edge","l":"setSource(Vertex)","url":"setSource(com.algo.structure.Vertex)"},{"p":"com.algo.config","c":"Preferences","l":"setString(Class, String, String)","url":"setString(java.lang.Class,java.lang.String,java.lang.String)"},{"p":"com.algo.config","c":"Preferences","l":"setString(String, String)","url":"setString(java.lang.String,java.lang.String)"},{"p":"com.algo.structure","c":"Edge","l":"setTarget(Vertex)","url":"setTarget(com.algo.structure.Vertex)"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"setTerminals(Set<String>)","url":"setTerminals(java.util.Set)"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"setVariables(Set<String>)","url":"setVariables(java.util.Set)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel","l":"setVertexList(List<Integer>)","url":"setVertexList(java.util.List)"},{"p":"com.algo.structure","c":"Structure","l":"setVerticesT(HashMap<Integer, V>)","url":"setVerticesT(java.util.HashMap)"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"setWidth(double)"},{"p":"com.algo.structure","c":"Vertex","l":"shape"},{"p":"com.algo.structure","c":"Edge.EdgeType","l":"SHARP"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel.ShortestPathEntry","l":"ShortestPathEntry(Integer, List<Double>, Map<Integer, Integer>)","url":"%3Cinit%3E(java.lang.Integer,java.util.List,java.util.Map)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner","l":"ShortestPathRunner()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Edge","l":"siblings"},{"p":"com.algo.rendering","c":"GralogColor","l":"SILVER"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"SILVER"},{"p":"com.algo.export","c":"SingleSourceShortestPathExport","l":"SingleSourceShortestPathExport(SingleSourceShortestPathModel, Structure)","url":"%3Cinit%3E(com.algo.models.SingleSourceShortestPathModel,com.algo.structure.Structure)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel","l":"SingleSourceShortestPathModel()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"sizeBox"},{"p":"com.algo.rendering.shapes","c":"SizeBox","l":"SizeBox(Double, Double)","url":"%3Cinit%3E(java.lang.Double,java.lang.Double)"},{"p":"com.algo.rendering","c":"Vector2D","l":"snapToGrid(double)"},{"p":"com.algo.structure","c":"Edge","l":"snapToGrid(double)"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"snapToGrid(double)"},{"p":"com.algo.structure","c":"Structure","l":"snapToGrid(double)"},{"p":"com.algo.structure","c":"Vertex","l":"snapToGrid(double)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.Bezier","l":"source"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.Loop","l":"start"},{"p":"com.algo.structure","c":"Edge","l":"startPointDistance"},{"p":"com.algo.config","c":"StringAlgorithmParameter","l":"StringAlgorithmParameter(String, String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.algo.config","c":"StringAlgorithmParameter","l":"StringAlgorithmParameter(String, String, SyntaxChecker, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String,com.algo.parser.SyntaxChecker,java.lang.String)"},{"p":"com.algo.config","c":"StringAlgorithmParameter","l":"StringAlgorithmParameter(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"com.algo.config","c":"StringAlgorithmParametersList","l":"StringAlgorithmParametersList(ArrayList<String>, ArrayList<String>, ArrayList<String>)","url":"%3Cinit%3E(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)"},{"p":"com.algo.config","c":"StringAlgorithmParametersList","l":"StringAlgorithmParametersList(ArrayList<String>, ArrayList<String>, ArrayList<SyntaxChecker>, ArrayList<String>)","url":"%3Cinit%3E(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)"},{"p":"com.algo.config","c":"StringAlgorithmParametersList","l":"StringAlgorithmParametersList(ArrayList<String>, ArrayList<String>)","url":"%3Cinit%3E(java.util.ArrayList,java.util.ArrayList)"},{"p":"com.algo.config","c":"StringAlgorithmParametersList","l":"StringAlgorithmParametersList(List<String>)","url":"%3Cinit%3E(java.util.List)"},{"p":"com.algo.export","c":"StringExportParameter","l":"StringExportParameter()","url":"%3Cinit%3E()"},{"p":"com.algo.export","c":"StringExportParameter","l":"StringExportParameter(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogColor","l":"stringToColor(String)","url":"stringToColor(java.lang.String)"},{"p":"com.algo.structure","c":"Vertex","l":"strokeColor"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"strokeDiamond(double, double, double, double, double, GralogColor)","url":"strokeDiamond(double,double,double,double,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"strokeOval(double, double, double, double, double, GralogColor)","url":"strokeOval(double,double,double,double,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"strokeOval(Vector2D, double, double, double, GralogColor)","url":"strokeOval(com.algo.rendering.Vector2D,double,double,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"strokeRectangle(double, double, double, double, double, GralogColor)","url":"strokeRectangle(double,double,double,double,double,com.algo.rendering.GralogColor)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext","l":"strokeRectangle(double, double, double, double, double, GralogGraphicsContext.LineType)","url":"strokeRectangle(double,double,double,double,double,com.algo.rendering.GralogGraphicsContext.LineType)"},{"p":"com.algo.rendering.shapes","c":"RenderingShape","l":"strokeWidth"},{"p":"com.algo.structure","c":"Vertex","l":"strokeWidth"},{"p":"com.algo.structure","c":"Structure","l":"Structure()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"StructureUtils","l":"StructureUtils()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Edge","l":"style"},{"p":"com.algo.structure","c":"Vertex","l":"style"},{"p":"com.algo.structure","c":"GraphOperations","l":"symmetricDifferenceLists(ArrayList<T>, ArrayList<T>, ArrayList<T>)","url":"symmetricDifferenceLists(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)"},{"p":"com.algo.config","c":"StringAlgorithmParameter","l":"syntaxCheck()"},{"p":"com.algo.config","c":"StringAlgorithmParametersList","l":"syntaxCheck()"},{"p":"com.algo.parser","c":"SyntaxChecker","l":"SyntaxChecker()","url":"%3Cinit%3E()"},{"p":"com.algo.parser","c":"SyntaxChecker.Result","l":"syntaxCorrect"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.Loop","l":"tangentEnd"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.Loop","l":"tangentStart"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.Bezier","l":"target"},{"p":"com.algo.rendering","c":"GralogColor","l":"TEAL"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"TEAL"},{"p":"com.algo.parser","c":"SyntaxChecker.Parser","l":"test(String)","url":"test(java.lang.String)"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner.AlgorithmsEnum","l":"text"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner.ShortestPathEnum","l":"text"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner.TraversalEnum","l":"text"},{"p":"com.algo.annotations","c":"AlgorithmDescription","l":"text()"},{"p":"com.algo.annotations","c":"StructureDescription","l":"text()"},{"p":"com.algo.export","c":"ExportFilterDescription","l":"text()"},{"p":"com.algo.generator","c":"GeneratorDescription","l":"text()"},{"p":"com.algo.plugins","c":"Description","l":"text()"},{"p":"com.algo.plugins","c":"FileFormatDescription","l":"text()"},{"p":"com.algo.structure","c":"Vertex","l":"textHeight"},{"p":"com.algo.structure","c":"Structure","l":"tgfToString()"},{"p":"com.algo.rendering","c":"Vector2D","l":"theta()"},{"p":"com.algo.structure","c":"Edge","l":"thickness"},{"p":"com.algo.export","c":"XSLTService","l":"TIK_PATH"},{"p":"com.algo.export","c":"TikZExport","l":"TikZExport()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering","c":"GralogColor","l":"toHtmlString()"},{"p":"com.algo.structure","c":"Structure","l":"toIncM()"},{"p":"com.algo.structure","c":"Edge","l":"toSimpleXml(Document, HashMap<Vertex, String>, String)","url":"toSimpleXml(org.w3c.dom.Document,java.util.HashMap,java.lang.String)"},{"p":"com.algo.structure","c":"Edge","l":"toSimpleXml(Document, HashMap<Vertex, String>)","url":"toSimpleXml(org.w3c.dom.Document,java.util.HashMap)"},{"p":"com.algo.structure","c":"Vertex","l":"toSimpleXml(Document, String)","url":"toSimpleXml(org.w3c.dom.Document,java.lang.String)"},{"p":"com.algo.structure","c":"Structure","l":"toSimpleXml(Document)","url":"toSimpleXml(org.w3c.dom.Document)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel","l":"toString()"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel.ShortestPathEntry","l":"toString()"},{"p":"com.algo.rendering","c":"GralogColor","l":"toString()"},{"p":"com.algo.rendering","c":"Vector2D","l":"toString()"},{"p":"com.algo.structure","c":"Edge","l":"toString()"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"toString()"},{"p":"com.algo.structure","c":"Vertex","l":"toString()"},{"p":"com.algo.structure","c":"VertexToInteger","l":"toString()"},{"p":"com.algo.structure","c":"Edge","l":"toXml(Document, HashMap<Vertex, String>)","url":"toXml(org.w3c.dom.Document,java.util.HashMap)"},{"p":"com.algo.structure","c":"Vertex","l":"toXml(Document, String)","url":"toXml(org.w3c.dom.Document,java.lang.String)"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"toXml(Document)","url":"toXml(org.w3c.dom.Document)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel","l":"toXml(Document)","url":"toXml(org.w3c.dom.Document)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel.ShortestPathEntry","l":"toXml(Document)","url":"toXml(org.w3c.dom.Document)"},{"p":"com.algo.plugins","c":"XmlMarshallable","l":"toXml(Document)","url":"toXml(org.w3c.dom.Document)"},{"p":"com.algo.structure","c":"EdgeIntermediatePoint","l":"toXml(Document)","url":"toXml(org.w3c.dom.Document)"},{"p":"com.algo.structure","c":"Structure","l":"toXml(Document)","url":"toXml(org.w3c.dom.Document)"},{"p":"com.algo.structure.controlpoints","c":"ControlPoint","l":"toXml(Document)","url":"toXml(org.w3c.dom.Document)"},{"p":"com.algo.export","c":"TrivialGraphFormatExport","l":"TrivialGraphFormatExport()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Edge","l":"type"},{"p":"com.algo.rendering","c":"Arrow","l":"TYPE2"},{"p":"com.algo.structure","c":"UndirectedGraph","l":"UndirectedGraph()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"GraphOperations","l":"unionLists(ArrayList<T>, ArrayList<T>, ArrayList<T>)","url":"unionLists(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)"},{"p":"com.algo.annotations","c":"AlgorithmDescription","l":"url()"},{"p":"com.algo.annotations","c":"StructureDescription","l":"url()"},{"p":"com.algo.export","c":"ExportFilterDescription","l":"url()"},{"p":"com.algo.generator","c":"GeneratorDescription","l":"url()"},{"p":"com.algo.plugins","c":"Description","l":"url()"},{"p":"com.algo.plugins","c":"FileFormatDescription","l":"url()"},{"p":"com.algo.annotations","c":"MyAnnotation","l":"value()"},{"p":"com.algo","c":"MainRunner.MainWindowOptions","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner.AlgorithmsEnum","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.algo.algorithms","c":"OptionsEnum.Options","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner.ShortestPathEnum","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner.TraversalEnum","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.algo.rendering","c":"Arrow.LineFlag","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.LineType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogTikStyles","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.algo.structure","c":"Edge.EdgeType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.algo.rendering","c":"GralogTikStyles","l":"valueOfStyle(String)","url":"valueOfStyle(java.lang.String)"},{"p":"com.algo","c":"MainRunner.MainWindowOptions","l":"values()"},{"p":"com.algo.algorithms","c":"AlgorithmsRunner.AlgorithmsEnum","l":"values()"},{"p":"com.algo.algorithms","c":"OptionsEnum.Options","l":"values()"},{"p":"com.algo.algorithms.graph.shortestpath","c":"ShortestPathRunner.ShortestPathEnum","l":"values()"},{"p":"com.algo.algorithms.graph.traversal","c":"GraphTraversalRunner.TraversalEnum","l":"values()"},{"p":"com.algo.rendering","c":"Arrow.LineFlag","l":"values()"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"values()"},{"p":"com.algo.rendering","c":"GralogGraphicsContext.LineType","l":"values()"},{"p":"com.algo.rendering","c":"GralogTikStyles","l":"values()"},{"p":"com.algo.structure","c":"Edge.EdgeType","l":"values()"},{"p":"com.algo.rendering","c":"Vector2D","l":"Vector2D(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"com.algo.rendering","c":"Vector2D","l":"Vector2D(Vector2D)","url":"%3Cinit%3E(com.algo.rendering.Vector2D)"},{"p":"com.algo.utility","c":"StringConverterCollection","l":"VERTEX_ID"},{"p":"com.algo.structure","c":"Vertex","l":"Vertex()","url":"%3Cinit%3E()"},{"p":"com.algo.structure","c":"Vertex","l":"Vertex(Configuration)","url":"%3Cinit%3E(com.algo.config.Configuration)"},{"p":"com.algo.structure","c":"Structure","l":"vertexIdHoles"},{"p":"com.algo.structure","c":"VertexToInteger","l":"vertexToInteger"},{"p":"com.algo.structure","c":"VertexToInteger","l":"VertexToInteger(HashMap<Vertex, Integer>, boolean)","url":"%3Cinit%3E(java.util.HashMap,boolean)"},{"p":"com.algo.structure","c":"VertexToInteger","l":"VertexToInteger(HashMap<Vertex, Integer>)","url":"%3Cinit%3E(java.util.HashMap)"},{"p":"com.algo.structure","c":"Edge","l":"weight"},{"p":"com.algo.generator","c":"Wheel","l":"Wheel()","url":"%3Cinit%3E()"},{"p":"com.algo.rendering","c":"GralogColor","l":"WHITE"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"WHITE"},{"p":"com.algo.rendering.shapes","c":"SizeBox","l":"width"},{"p":"com.algo.export","c":"IndentedWriter","l":"write(String)","url":"write(java.lang.String)"},{"p":"com.algo.export","c":"IndentedWriter","l":"writeLine(String)","url":"writeLine(java.lang.String)"},{"p":"com.algo.export","c":"IndentedWriter","l":"writeLineNoIndent(String)","url":"writeLineNoIndent(java.lang.String)"},{"p":"com.algo.export","c":"IndentedWriter","l":"writeNoIndent(String)","url":"writeNoIndent(java.lang.String)"},{"p":"com.algo.structure","c":"Structure","l":"writeToFile(String, Boolean)","url":"writeToFile(java.lang.String,java.lang.Boolean)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel","l":"writeToFile(String)","url":"writeToFile(java.lang.String)"},{"p":"com.algo.structure","c":"Structure","l":"writeToStream(StreamResult, Boolean)","url":"writeToStream(javax.xml.transform.stream.StreamResult,java.lang.Boolean)"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"writeToStream(StreamResult)","url":"writeToStream(javax.xml.transform.stream.StreamResult)"},{"p":"com.algo.models","c":"SingleSourceShortestPathModel","l":"writeToStream(StreamResult)","url":"writeToStream(javax.xml.transform.stream.StreamResult)"},{"p":"com.algo.algorithms.cfg","c":"Grammar","l":"writeToStream(String)","url":"writeToStream(java.lang.String)"},{"p":"com.algo.export","c":"CYKAlgorithmsExport","l":"writeToStream(String)","url":"writeToStream(java.lang.String)"},{"p":"com.algo.export","c":"ExportService","l":"writeToStream(String)","url":"writeToStream(java.lang.String)"},{"p":"com.algo.export","c":"IterationsExport","l":"writeToStream(String)","url":"writeToStream(java.lang.String)"},{"p":"com.algo.export","c":"SingleSourceShortestPathExport","l":"writeToStream(String)","url":"writeToStream(java.lang.String)"},{"p":"com.algo.export","c":"XSLTService","l":"XML_PATH"},{"p":"com.algo.plugins","c":"XmlMarshallable","l":"XmlMarshallable()","url":"%3Cinit%3E()"},{"p":"com.algo.plugins","c":"XmlMarshallable","l":"xmlName()"},{"p":"com.algo.structure","c":"Structure","l":"xmlToString()"},{"p":"com.algo.export","c":"XSLTService","l":"xmlToTex(String, String)","url":"xmlToTex(java.lang.String,java.lang.String)"},{"p":"com.algo.rendering","c":"Arrow","l":"xPoints"},{"p":"com.algo.export","c":"XSLTService","l":"XSLT_PATH"},{"p":"com.algo.export","c":"XSLTService","l":"XSLTService()","url":"%3Cinit%3E()"},{"p":"com.algo.export","c":"XSLTService","l":"xsltTransform(String, String, String)","url":"xsltTransform(java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.algo.rendering","c":"GralogColor","l":"YELLOW"},{"p":"com.algo.rendering","c":"GralogColor.Color","l":"YELLOW"},{"p":"com.algo.algorithms","c":"OptionsEnum.Options","l":"YES"},{"p":"com.algo.rendering","c":"Arrow","l":"yPoints"},{"p":"com.algo.rendering","c":"Vector2D","l":"zero()"}]